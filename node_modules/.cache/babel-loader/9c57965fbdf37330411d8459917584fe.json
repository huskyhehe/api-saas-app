{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\n/**\n * The function that correctly handles passing refs.\n *\n * @param {Function|Object} ref An ref object or function\n * @param {HTMLElement} node A node that should be passed by ref\n */\n\nexport var handleRef = function handleRef(ref, node) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof ref === 'string') {\n      throw new Error(['We do not support refs as string, this is a legacy API and will be likely to be removed in', 'one of the future releases of React.'].join(' '));\n    }\n  }\n\n  if (typeof ref === 'function') {\n    ref(node);\n    return;\n  }\n\n  if (ref !== null && _typeof(ref) === 'object') {\n    // The `current` property is defined as readonly, however it's a valid way because `ref` is a mutable object\n    // eslint-disable-next-line no-param-reassign\n    ref.current = node;\n  }\n};\nexport var isRefObject = function isRefObject(ref) {\n  return (// https://github.com/facebook/react/blob/v16.8.2/packages/react-reconciler/src/ReactFiberCommitWork.js#L665\n    // eslint-disable-next-line\n    ref !== null && _typeof(ref) === 'object' && ref.hasOwnProperty('current')\n  );\n};","map":{"version":3,"names":["_typeof","handleRef","ref","node","process","env","NODE_ENV","Error","join","current","isRefObject","hasOwnProperty"],"sources":["D:/MOOC/Udemy/Django Full Stack/api-saas/node_modules/semantic-ui-react/dist/es/lib/refUtils.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/typeof\";\n\n/**\n * The function that correctly handles passing refs.\n *\n * @param {Function|Object} ref An ref object or function\n * @param {HTMLElement} node A node that should be passed by ref\n */\nexport var handleRef = function handleRef(ref, node) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof ref === 'string') {\n      throw new Error(['We do not support refs as string, this is a legacy API and will be likely to be removed in', 'one of the future releases of React.'].join(' '));\n    }\n  }\n\n  if (typeof ref === 'function') {\n    ref(node);\n    return;\n  }\n\n  if (ref !== null && _typeof(ref) === 'object') {\n    // The `current` property is defined as readonly, however it's a valid way because `ref` is a mutable object\n    // eslint-disable-next-line no-param-reassign\n    ref.current = node;\n  }\n};\nexport var isRefObject = function isRefObject(ref) {\n  return (// https://github.com/facebook/react/blob/v16.8.2/packages/react-reconciler/src/ReactFiberCommitWork.js#L665\n    // eslint-disable-next-line\n    ref !== null && _typeof(ref) === 'object' && ref.hasOwnProperty('current')\n  );\n};"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,+BAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;EACnD,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAI,OAAOJ,GAAP,KAAe,QAAnB,EAA6B;MAC3B,MAAM,IAAIK,KAAJ,CAAU,CAAC,4FAAD,EAA+F,sCAA/F,EAAuIC,IAAvI,CAA4I,GAA5I,CAAV,CAAN;IACD;EACF;;EAED,IAAI,OAAON,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAACC,IAAD,CAAH;IACA;EACD;;EAED,IAAID,GAAG,KAAK,IAAR,IAAgBF,OAAO,CAACE,GAAD,CAAP,KAAiB,QAArC,EAA+C;IAC7C;IACA;IACAA,GAAG,CAACO,OAAJ,GAAcN,IAAd;EACD;AACF,CAjBM;AAkBP,OAAO,IAAIO,WAAW,GAAG,SAASA,WAAT,CAAqBR,GAArB,EAA0B;EACjD,OAAQ;IACN;IACAA,GAAG,KAAK,IAAR,IAAgBF,OAAO,CAACE,GAAD,CAAP,KAAiB,QAAjC,IAA6CA,GAAG,CAACS,cAAJ,CAAmB,SAAnB;EAF/C;AAID,CALM"},"metadata":{},"sourceType":"module"}