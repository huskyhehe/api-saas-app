{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"sources":["D:/MOOC/Udemy/Django Full Stack/api-saas/src/store/actions/auth.js"],"sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2\n      })\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}