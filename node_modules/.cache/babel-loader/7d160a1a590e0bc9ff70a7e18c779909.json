{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _isNil from \"lodash/isNil\";\nimport _get from \"lodash/get\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Label from '../../elements/Label';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width;\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props);\n\n  var errorPointing = _get(error, 'pointing', 'above');\n\n  var errorLabel = Label.create(error, {\n    autoGenerateKey: false,\n    defaultProps: {\n      prompt: true,\n      pointing: errorPointing\n    }\n  });\n  var errorLabelBefore = (errorPointing === 'below' || errorPointing === 'right') && errorLabel;\n  var errorLabelAfter = (errorPointing === 'above' || errorPointing === 'left') && errorLabel; // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), errorLabelBefore, createHTMLLabel(label, {\n      autoGenerateKey: false\n    }), errorLabelAfter);\n  } // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n\n\n  var controlProps = _objectSpread({}, rest, {\n    content: content,\n    children: children,\n    disabled: disabled,\n    required: required,\n    type: type // wrap HTML checkboxes/radios in the label\n\n  });\n\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, React.createElement(\"label\", null, errorLabelBefore, createElement(control, controlProps), \" \", label, errorLabelAfter));\n  } // pass label prop to controls that support it\n\n\n  if (control === Checkbox || control === Radio) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, errorLabelBefore, createElement(control, _objectSpread({}, controlProps, {\n      label: label\n    })), errorLabelAfter);\n  } // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n\n  return React.createElement(ElementType, {\n    className: classes\n  }, createHTMLLabel(label, {\n    defaultProps: {\n      htmlFor: _get(controlProps, 'id')\n    },\n    autoGenerateKey: false\n  }), errorLabelBefore, createElement(control, controlProps), errorLabelAfter);\n}\n\nFormField.handledProps = [\"as\", \"children\", \"className\", \"content\", \"control\", \"disabled\", \"error\", \"inline\", \"label\", \"required\", \"type\", \"width\"];\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state along with a message. */\n  error: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control'])]),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default FormField;","map":{"version":3,"names":["_objectSpread","_extends","_isNil","_get","cx","PropTypes","React","createElement","childrenUtils","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useWidthProp","Label","Checkbox","Radio","FormField","props","children","className","content","control","disabled","error","inline","label","required","type","width","classes","rest","ElementType","errorPointing","errorLabel","create","autoGenerateKey","defaultProps","prompt","pointing","errorLabelBefore","errorLabelAfter","isNil","controlProps","htmlFor","handledProps","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","some","func","oneOf","bool","oneOfType","itemShorthand","object","every","demand","WIDTHS"],"sources":["D:/MOOC/Udemy/Django Full Stack/api-saas/node_modules/semantic-ui-react/dist/es/collections/Form/FormField.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _isNil from \"lodash/isNil\";\nimport _get from \"lodash/get\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Label from '../../elements/Label';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n/**\n * A field is a form element containing a label and an input.\n * @see Form\n * @see Button\n * @see Checkbox\n * @see Dropdown\n * @see Input\n * @see Radio\n * @see Select\n * @see Visibility\n */\n\nfunction FormField(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      control = props.control,\n      disabled = props.disabled,\n      error = props.error,\n      inline = props.inline,\n      label = props.label,\n      required = props.required,\n      type = props.type,\n      width = props.width;\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props);\n\n  var errorPointing = _get(error, 'pointing', 'above');\n\n  var errorLabel = Label.create(error, {\n    autoGenerateKey: false,\n    defaultProps: {\n      prompt: true,\n      pointing: errorPointing\n    }\n  });\n  var errorLabelBefore = (errorPointing === 'below' || errorPointing === 'right') && errorLabel;\n  var errorLabelAfter = (errorPointing === 'above' || errorPointing === 'left') && errorLabel; // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), errorLabelBefore, createHTMLLabel(label, {\n      autoGenerateKey: false\n    }), errorLabelAfter);\n  } // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n\n\n  var controlProps = _objectSpread({}, rest, {\n    content: content,\n    children: children,\n    disabled: disabled,\n    required: required,\n    type: type // wrap HTML checkboxes/radios in the label\n\n  });\n\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, React.createElement(\"label\", null, errorLabelBefore, createElement(control, controlProps), \" \", label, errorLabelAfter));\n  } // pass label prop to controls that support it\n\n\n  if (control === Checkbox || control === Radio) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, errorLabelBefore, createElement(control, _objectSpread({}, controlProps, {\n      label: label\n    })), errorLabelAfter);\n  } // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n\n  return React.createElement(ElementType, {\n    className: classes\n  }, createHTMLLabel(label, {\n    defaultProps: {\n      htmlFor: _get(controlProps, 'id')\n    },\n    autoGenerateKey: false\n  }), errorLabelBefore, createElement(control, controlProps), errorLabelAfter);\n}\n\nFormField.handledProps = [\"as\", \"children\", \"className\", \"content\", \"control\", \"disabled\", \"error\", \"inline\", \"label\", \"required\", \"type\", \"width\"];\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\n   * Extra FormField props are passed to the control component.\n   * Mutually exclusive with children.\n   */\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n\n  /** Individual fields may display an error state along with a message. */\n  error: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control'])]),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default FormField;"],"mappings":"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"},"metadata":{},"sourceType":"module"}