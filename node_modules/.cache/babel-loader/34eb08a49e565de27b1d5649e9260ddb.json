{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: customPropTypes.as,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;","map":{"version":3,"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useTextAlignProp","useVerticalAlignProp","TableCell","TableRow","props","active","cellAs","cells","children","className","disabled","error","negative","positive","textAlign","verticalAlign","warning","classes","rest","ElementType","isNil","createElement","cell","create","defaultProps","as","handledProps","propTypes","process","env","NODE_ENV","bool","collectionShorthand","node","string","oneOf","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS"],"sources":["D:/MOOC/Udemy/Django Full Stack/api-saas/node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useVerticalAlignProp } from '../../lib';\nimport TableCell from './TableCell';\n/**\n * A table can have rows.\n */\n\nfunction TableRow(props) {\n  var active = props.active,\n      cellAs = props.cellAs,\n      cells = props.cells,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      error = props.error,\n      negative = props.negative,\n      positive = props.positive,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      warning = props.warning;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(TableRow, props);\n  var ElementType = getElementType(TableRow, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(cells, function (cell) {\n    return TableCell.create(cell, {\n      defaultProps: {\n        as: cellAs\n      }\n    });\n  }));\n}\n\nTableRow.handledProps = [\"active\", \"as\", \"cellAs\", \"cells\", \"children\", \"className\", \"disabled\", \"error\", \"negative\", \"positive\", \"textAlign\", \"verticalAlign\", \"warning\"];\nTableRow.defaultProps = {\n  as: 'tr',\n  cellAs: 'td'\n};\nTableRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can be active or selected by a user. */\n  active: PropTypes.bool,\n\n  /** An element type to render as (string or function). */\n  cellAs: customPropTypes.as,\n\n  /** Shorthand array of props for TableCell. */\n  cells: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A row can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A row may call attention to an error or a negative value. */\n  error: PropTypes.bool,\n\n  /** A row may let a user know whether a value is bad. */\n  negative: PropTypes.bool,\n\n  /** A row may let a user know whether a value is good. */\n  positive: PropTypes.bool,\n\n  /** A table row can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** A table row can adjust its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A row may warn a user. */\n  warning: PropTypes.bool\n} : {};\nTableRow.create = createShorthandFactory(TableRow, function (cells) {\n  return {\n    cells: cells\n  };\n});\nexport default TableRow;"],"mappings":"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"},"metadata":{},"sourceType":"module"}